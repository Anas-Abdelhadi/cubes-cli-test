import {  {{#if data.withRepo}}Inject,{{/if}} Service } from 'cubes'
import { IoCLevelsEnum } from '@/control'
import type {I{{data.pascalName}}Service} from '../meta/i-{{data.name}}-service'
{{#if data.withRepo}}
import type{ I{{data.pascalName}}Repository } from '@/app/repository/{{data.name}}/meta/index'
import type{ T{{data.pascalName}}Client } from '@/app/repository/proxy/{{data.name}}.proxy'
{{/if}}
import { serviceMap } from '@/service'

@Service(IoCLevelsEnum.DEV_2, serviceMap.{{data.pascalName}}Service.key)
class {{data.pascalName}}Service implements I{{data.pascalName}}Service {
  public readonly id: string = `${serviceMap.{{data.pascalName}}Service.key}`
  {{#if data.withRepo}}
  @Inject() {{data.pascalName}}Repository!: I{{data.pascalName}}Repository<T{{data.pascalName}}Client>
  {{/if}}
  //todo: provide implementation for your I{{data.pascalName}}Service interface



  dispose(): void {
      //todo: implement your service disposal here..
  }
}

export default {{data.pascalName}}Service